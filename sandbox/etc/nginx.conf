user app;
error_log /dev/stderr info;
pid /tmp/nginx.pid;
daemon off;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Set nginx temp paths where our non-root user can write to.
  client_body_temp_path /var/tmp/nginx/client_body;
  proxy_temp_path /var/tmp/nginx/proxy;
  fastcgi_temp_path /var/tmp/nginx/fastcgi;
  uwsgi_temp_path /var/tmp/nginx/uwsgi;
  scgi_temp_path /var/tmp/nginx/scgi;

  # Enable on-the-fly gzip compression of HTML, javascript, CSS, plaintext, and
  # xml.
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;

  # Configure the nginx access log.
  # This does two things to the timestamp:
  #  * Strips the timezone
  #  * Adds milliseconds
  map "$time_iso8601 # $msec" $time_iso8601_ms {
   "~(^.+)-0[78]:00 # \d+\.(\d+)$" $1,$2;
  }
  # Prefix our logs with NGINX_ACCESS to make them easier to either grep in our out
  log_format apache 'NGINX_ACCESS $http_x_forwarded_for - $remote_user "$time_iso8601_ms" "$request" '
                    '$status $body_bytes_sent "$http_referer" "$http_user_agent"';
  access_log /dev/stdout apache;

  sendfile on;
  tcp_nopush on;

  server {
    listen 8443 ssl http2;

    location /static/  {
      expires max;
      add_header Cache-Control public;
      alias /static/;
    }

    location /media/  {
      expires max;
      add_header Cache-Control public;
      alias /media/;
    }

    server_name localhost;
    client_max_body_size 100M;
    client_header_timeout 305s;
    client_body_timeout 305s;
    keepalive_timeout 305s;

    # Disable the TRACE and TRACK methods.
    if ($request_method ~ ^(TRACE|TRACK)$ ) {
       return 405;
    }

    # Don't send the nginx version number in error pages or the Server header.
    server_tokens off;

    # Proxies all communication, except whatever the app-specific configs
    # define, to the gunicorn server that is bound to the socket at
    # /tmp/app.sock.
    location / {
      proxy_pass http://unix:/tmp/app.sock;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;
  	  proxy_read_timeout 305s;
  	  proxy_send_timeout 305s;
    }

    # Create the view that the ALB Target Group health check will look at.
    location /lb-status {
      return 200 'Hello, Mr. Load balancer.';
      add_header Content-Type text/plain;
    }

    # Don't spam logs about the favicon not being found.
    location = /favicon.ico {
      access_log off;
      log_not_found off;
    }

    ######## SECURITY CONFIGURATION ########

    # Enable HTTP Strict Transport Security. This causes the browser to ONLY
    # ever try to access the domain over https once its established a secure
    # connection at least once. It won't even attempt http again until max-age
    # number of seconds have passed since the last https request. The suggested
    # max-age is 63072000, which is 2 years.
    add_header Strict-Transport-Security "max-age=63072000";
    # If an XSS attack is detected by the browser, this prevents the page from
    # being rendered at all. Most browsers don't support this any more (they
    # expect the server to issue CSP headers), but some still do.
    add_header X-XSS-Protection "1; mode=block";

    ssl_certificate /certs/localhost.crt;
    ssl_certificate_key /certs/localhost.key;

    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets on;
  }
}
